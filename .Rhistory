title = "Win Rates of Top 5 Teams in Major Tournaments",
x = "Tournament",
y = "Team",
fill = "Win Rate"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
#Analyze the win rates of top teams across different tournaments
# Filter major tournaments and exclude "Draw"
top5_major_tournaments <- ready_to_analyse_data %>%
filter(
tournament %in% c("Copa América", "AFC Asian Cup", "African Cup of Nations", "UEFA Euro", "Gold Cup"),
winner != "Draw" # Exclude Draw
)
top_teams_per_tournament <- top5_major_tournaments %>%
group_by(tournament, winner) %>%
summarise(total_wins = n(), .groups = "drop") %>%
arrange(tournament, desc(total_wins)) %>%
group_by(tournament) %>%
slice_max(total_wins, n = 5)
win_rate_data <- top5_major_tournaments %>%
semi_join(top_teams_per_tournament, by = c("tournament", "winner")) %>%
group_by(tournament, winner) %>%
summarise(wins = n(), .groups = "drop") %>%
group_by(tournament) %>%
mutate(total_matches = sum(wins)) %>%
mutate(win_rate = wins / total_matches)
ggplot(win_rate_data, aes(x = tournament, y = winner, fill = win_rate)) +
geom_tile(color = "white") +
scale_fill_gradient(low = "white", high = "blue") +
labs(
title = "Win Rates of Top 5 Teams in Major Tournaments",
x = "Tournament",
y = "Team",
fill = "Win Rate"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(win_rate_data, aes(x = tournament, y = winner, fill = win_rate)) +
geom_tile(color = "white") +
scale_fill_gradient(low = "white", high = "blue") +
facet_grid(~tournament)
labs(
title = "Win Rates of Top 5 Teams in Major Tournaments",
x = "Tournament",
y = "Team",
fill = "Win Rate"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(win_rate_data, aes(x = tournament, y = winner, fill = win_rate)) +
geom_tile(color = "white") +
scale_fill_gradient(low = "white", high = "blue") +
facet_grid(winner~tournament)
labs(
title = "Win Rates of Top 5 Teams in Major Tournaments",
x = "Tournament",
y = "Team",
fill = "Win Rate"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(win_rate_data, aes(x = winner, y = win_rate, fill = win_rate)) +
geom_bar(stat = "identity", color = "white") +
scale_fill_gradient(low = "white", high = "blue") +
labs(
title = "Win Rates of Top 5 Teams in Each Tournament",
x = "Team",
y = "Win Rate",
fill = "Win Rate"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
strip.text = element_text(size = 12, face = "bold")
) +
facet_wrap(~ tournament, scales = "free_x") # Separate grid for each tournament
ggplot(win_rate_data, aes(x = winner, y = tournament, fill = win_rate)) +
geom_tile(color = "white") + # Creates the heatmap
scale_fill_gradient(low = "white", high = "blue") +
labs(
title = "Win Rates of Top 5 Teams in Each Tournament",
x = "Team",
y = "Tournament",
fill = "Win Rate"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
strip.text = element_text(size = 12, face = "bold")
)
major_tournaments <- ready_to_analyse_data %>%
filter(tournament %in% c("Copa América", "AFC Asian Cup", "African Cup of Nations", "UEFA Euro", "Gold Cup"))
alluvial_plot <- major_tournaments %>%
group_by(tournament, penalty, own_goal, match_outcome) %>%
summarise(count = n(), .groups= "drop")
ggplot(alluvial_plot,
aes(axis1 = penalty, axis2 = own_goal, axis3 = match_outcome, y = count)) +
geom_alluvium(aes(fill = match_outcome)) +
geom_stratum() +
geom_text(stat = "stratum", aes(label = after_stat(stratum)), size = 3) +
scale_x_discrete(labels = c("Penalty", "Own Goal", "Match Outcome")) +
facet_wrap(~tournament)+
labs(
title = "Influence of Penalties and Own Goals on Match Outcomes Across Tournaments",
x = "",
y = "Match Count",
fill = "Match Outcome"
) +
theme_minimal() +
theme(axis.text.x = element_text(size = 10, face = "bold"))
Group_Bar <- major_tournaments %>%
group_by(tournament, neutral, match_outcome) %>%
summarise(match_count = n(), .groups = "drop") %>%
ggplot(aes(x = tournament, y = match_count, fill = match_outcome)) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(~ neutral, labeller = labeller(neutral = c("FALSE" = "Non-Neutral Venues", "TRUE" = "Neutral Venues"))) +
scale_fill_brewer(palette = "Set2") +
labs(title = "Exploring Match Outcome Trends Across Neutral and Non-Neutral Venues",
x = "Tournament", y = "Number of Matches", fill = "Match Outcome") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust =1), strip.text =element_text(size = 12))
print(Group_Bar)
#Analyze the win rates of top teams across different tournaments
# Filter major tournaments and exclude "Draw"
top5_major_tournaments <- ready_to_analyse_data %>%
filter(
tournament %in% c("Copa América", "AFC Asian Cup", "African Cup of Nations", "UEFA Euro", "Gold Cup"),
winner != "Draw" # Exclude Draw
)
top_teams_per_tournament <- top5_major_tournaments %>%
group_by(tournament, winner) %>%
summarise(total_wins = n(), .groups = "drop") %>%
arrange(tournament, desc(total_wins)) %>%
group_by(tournament) %>%
slice_max(total_wins, n = 5)
win_rate_data <- top5_major_tournaments %>%
semi_join(top_teams_per_tournament, by = c("tournament", "winner")) %>%
group_by(tournament, winner) %>%
summarise(wins = n(), .groups = "drop") %>%
group_by(tournament) %>%
mutate(total_matches = sum(wins)) %>%
mutate(win_rate = wins / total_matches)
ggplot(win_rate_data, aes(x = tournament, y = winner, fill = win_rate)) +
geom_tile(color = "white") +
scale_fill_gradient(low = "white", high = "blue") +
labs(
title = "Win Rates of Top 5 Teams in Major Tournaments",
x = "Tournament",
y = "Team",
fill = "Win Rate"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
major_tournaments <- ready_to_analyse_data %>%
filter(tournament %in% c("Copa América", "AFC Asian Cup", "African Cup of Nations", "UEFA Euro", "Gold Cup"))
alluvial_plot <- major_tournaments %>%
group_by(tournament, penalty, own_goal, match_outcome) %>%
summarise(count = n(), .groups= "drop")
sankey_plot <- ggplot(alluvial_plot,
aes(axis1 = penalty, axis2 = own_goal, axis3 = match_outcome, y = count)) +
geom_alluvium(aes(fill = match_outcome)) +
geom_stratum() +
geom_text(stat = "stratum", aes(label = after_stat(stratum)), size = 3) +
scale_x_discrete(labels = c("Penalty", "Own Goal", "Match Outcome")) +
facet_wrap(~tournament)+
labs(
title = "Influence of Penalties and Own Goals on Match Outcomes Across Tournaments",
x = "",
y = "Match Count",
fill = "Match Outcome"
) +
theme_minimal() +
theme(axis.text.x = element_text(size = 10, face = "bold"))
print(sankey_plot)
heat_map<- ggplot(win_rate_data, aes(x = tournament, y = winner, fill = win_rate)) +
geom_tile(color = "white") +
scale_fill_gradient(low = "white", high = "blue") +
labs(
title = "Win Rates of Top 5 Teams in Major Tournaments",
x = "Tournament",
y = "Team",
fill = "Win Rate"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
print(heat_map)
proportion_data <- major_tournaments %>%
group_by(tournament, match_outcome) %>%
summarise(count = n(), .groups = "drop") %>%
group_by(tournament) %>%
mutate(proportion = count / sum(count))
# Plot line chart
ggplot(proportion_data, aes(x = tournament, y = proportion, color = match_outcome, group = match_outcome)) +
geom_line(size = 1) +
geom_point(size = 2) +
labs(
title = "Proportion of Match Outcomes Across Major Tournaments",
x = "Tournament",
y = "Proportion",
color = "Match Outcome"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1)
)
major_tournaments$year <- year(major_tournaments$date)
# Prepare data for time-based analysis by year
time_data_year <- major_tournaments %>%
group_by(tournament, year, match_outcome) %>%
summarise(count = n(), .groups = "drop") %>%
group_by(tournament, year) %>%
mutate(proportion = count / sum(count))
# Plot the line chart showing match outcomes over time by year
ggplot(time_data_year, aes(x = year, y = proportion, color = match_outcome, group = match_outcome)) +
geom_line(size = 1) +
geom_point(size = 2) +
facet_wrap(~ tournament, scales = "free_x") +  # Separate plot for each tournament
labs(
title = "Match Outcome Proportions Over Time (By Year) in Major Tournaments",
x = "Year",
y = "Proportion",
color = "Match Outcome"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
strip.text = element_text(size = 12, face = "bold")
)
ggplot(tournament_trend, aes(x = year, y = avg_score, color = tournament)) +
geom_line(linewidth = 1) +
labs(title = "Average Goals Scored per Match by Tournament",
x = "Year", y = "Average Goals",
color = "Tournament"
) +
theme_minimal()
ggplot(tournament_trend, aes(x = year, y = draw_rate, color = tournament)) +
geom_line(linewidth = 1) +
labs(title = "Frequency of Draws over the years", x = "Years", y = "Draw_Rate", color = "Tournament") +
theme_minimal()
# Extract year from the date column
major_tournaments$year <- year(major_tournaments$date)
# Prepare data for time-based analysis by year
time_data_year <- major_tournaments %>%
group_by(tournament, year, match_outcome) %>%
summarise(count = n(), .groups = "drop") %>%
group_by(tournament, year) %>%
mutate(proportion = count / sum(count))
# Plot the line chart showing match outcomes over time by year
line_chart <- ggplot(time_data_year, aes(x = year, y = proportion, color = match_outcome, group = match_outcome)) +
geom_line(size = 1) +
geom_point(size = 2) +
facet_wrap(~ tournament, scales = "free_x") +  # Separate plot for each tournament
labs(
title = "Match Outcome Proportions Over Time (By Year) in Major Tournaments",
x = "Year",
y = "Proportion",
color = "Match Outcome"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
strip.text = element_text(size = 12, face = "bold")
)
print(line_chart)
#Goal Scoring Patterns: Comparing Home and Away Scores by Match Location
library(ggridges)
ridge_plot <- ggplot(major_tournaments, aes(x = year, y = tournament, fill = tournament)) +
geom_density_ridges(alpha = 0.7) +
labs(
title = "Distribution of Matches Across Major Tournaments (By Year)",
x = "Year",
y = "Tournament"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12)
)
print(ridge_plot)
ggplot(major_tournaments, aes(x = tournament, y = year)) +
geom_jitter(aes(color = tournament), width = 0.2, height = 0.1) +
labs(
title = "Distribution of Matches Across Major Tournaments (By Year)",
x = "Tournament",
y = "Year"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12)
)
ggplot(major_tournaments, aes(x = tournament, y = year, fill = tournament)) +
geom_violin(trim = FALSE) +
labs(
title = "Distribution of Matches Across Major Tournaments (By Year)",
x = "Tournament",
y = "Year"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12)
)
ggplot(major_tournaments, aes(x = tournament, y = home_score)) +
geom_violin(trim = FALSE, fill = "skyblue", color = "darkblue") +
labs(
title = "Distribution of Matches Across Major Tournaments",
x = "Tournament",
y = "Match Count"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12)
)
ridge_plot <- ggplot(major_tournaments, aes(x = home_score, y = tournament, fill = tournament)) +
geom_density_ridges(alpha = 0.7) +
labs(
title = "Distribution of Matches Across Major Tournaments",
x = "Match Count",
y = "Tournament"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12)
)
print(ridge_plot)
treemap <- ggplot(treemap_data, aes(area = total_matches, label = tournament, fill = total_matches)) +
geom_treemap() +
geom_treemap_text(fontface = "italic", place = "centre", color = "white")+
scale_fill_gradient(low = "lightblue", high = "darkblue")+
labs(
title = "Proportion of Matches by Tournament",
fill = "Total Matches"
) +
theme_minimal()
library(treemapify)
treemap <- ggplot(treemap_data, aes(area = total_matches, label = tournament, fill = total_matches)) +
geom_treemap() +
geom_treemap_text(fontface = "italic", place = "centre", color = "white")+
scale_fill_gradient(low = "lightblue", high = "darkblue")+
labs(
title = "Proportion of Matches by Tournament",
fill = "Total Matches"
) +
theme_minimal()
print(treemap)
treemap_data <- major_tournaments %>%
group_by(tournament) %>%
summarise(total_matches = n())
treemap <- ggplot(treemap_data, aes(area = total_matches, label = tournament, fill = total_matches)) +
geom_treemap() +
geom_treemap_text(fontface = "italic", place = "centre", color = "white")+
scale_fill_gradient(low = "lightblue", high = "darkblue")+
labs(
title = "Proportion of Matches by Tournament",
fill = "Total Matches"
) +
theme_minimal()
print(treemap)
#Composite Visualization:
library(patchwork)
composite_visualization <- (treemap+line_chart) /(sankey_plot+heat_map)+
plot_annotation(title = "Analysis of key trends in top 5 continental tournaments",
subtitle = "A deep dive into distribution of matches, match outcomes, influence of penalty & own_goals and win rates of top 5 teams ")
print(composite_visualization)
ggsave("new_composite_visualizations.pdf", plot = composite_visualization ,width = 10, height = 14, dpi = 300)
alluvial_plot <- alluvial_plot %>%
mutate(
penalty = ifelse(penalty, "Penalty: Yes", "Penalty: No"),
own_goal = ifelse(own_goal, "Own Goal: Yes", "Own Goal: No")
)
sankey_plot <- ggplot(alluvial_plot,
aes(axis1 = penalty, axis2 = own_goal, axis3 = match_outcome, y = count)) +
geom_alluvium(aes(fill = match_outcome)) +
geom_stratum() +
geom_text(stat = "stratum", aes(label = after_stat(stratum)), size = 3) +
scale_x_discrete(labels = c("Penalty", "Own Goal", "Match Outcome")) +
facet_wrap(~tournament) +
labs(
title = "Influence of Penalties and Own Goals on Match Outcomes Across Tournaments",
x = "",
y = "Match Count",
fill = "Match Outcome"
) +
theme_minimal() +
theme(axis.text.x = element_text(size = 10, face = "bold"))
print(sankey_plot)
composite_visualization <- (treemap+line_chart) /(sankey_plot+heat_map)+
plot_annotation(title = "Analysis of key trends in top 5 continental tournaments",
subtitle = "A deep dive into distribution of matches, match outcomes, influence of penalty & own_goals and win rates of top 5 teams ")
ggsave("new_composite_visualizations.pdf", plot = composite_visualization ,width = 10, height = 14, dpi = 300)
ggsave("new_composite_visualizations.pdf", plot = composite_visualization ,width = 30, height = 18, dpi = 300)
#Impact of Penalties and Own Goals on Match Outcomes in top5 continental Tournaments
library(ggplot2)
library(dplyr)
library(ggalluvial)
library(tidyr)
#Distribution of matches across top 5 continental tournaments
library(treemapify)
#Composite Visualization:
library(patchwork)
library(tidyverse)
sankey_plot <- ggplot(alluvial_plot,
aes(axis1 = penalty, axis2 = own_goal, axis3 = match_outcome, y = count)) +
geom_alluvium(aes(fill = match_outcome)) +
geom_stratum() +
geom_text(stat = "stratum", aes(label = after_stat(stratum)), size = 3) +
scale_x_discrete(labels = c("Penalty", "Own Goal", "Match Outcome")) +
facet_wrap(~tournament) +
labs(
title = "Alluvial Plot : Influence of Penalties and Own Goals on Match Outcomes Across Tournaments",
x = "",
y = "Match Count",
fill = "Match Outcome"
) +
theme_minimal() +
theme(axis.text.x = element_text(size = 10, face = "bold"))
print(sankey_plot)
# Plot the line chart showing match outcomes over time by year
line_chart <- ggplot(time_data_year, aes(x = year, y = proportion, color = match_outcome, group = match_outcome)) +
geom_line(size = 1) +
geom_point(size = 2) +
facet_wrap(~ tournament, scales = "free_x") +  # Separate plot for each tournament
labs(
title = "Line Chart : Match Outcome Proportions Over Time (By Year) in Major Tournaments",
x = "Year",
y = "Proportion",
color = "Match Outcome"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
strip.text = element_text(size = 12, face = "bold")
)
print(line_chart)
treemap <- ggplot(treemap_data, aes(area = total_matches, label = tournament, fill = total_matches)) +
geom_treemap() +
geom_treemap_text(fontface = "italic", place = "centre", color = "white")+
scale_fill_gradient(low = "lightblue", high = "darkblue")+
labs(
title = "Treemap : Proportion of Matches by Tournament",
fill = "Total Matches"
) +
theme_minimal()
print(treemap)
heat_map<- ggplot(win_rate_data, aes(x = tournament, y = winner, fill = win_rate)) +
geom_tile(color = "white") +
scale_fill_gradient(low = "white", high = "blue") +
labs(
title = "Heatmap : Win Rates of Top 5 Teams in Major Tournaments",
x = "Tournament",
y = "Team",
fill = "Win Rate"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
print(heat_map)
composite_visualization <- (treemap+line_chart) /(sankey_plot+heat_map)+
plot_annotation(
title = "Analysis of key trends in top 5 continental tournaments",
subtitle = "A deep dive into distribution of matches, match outcomes, influence of penalty & own_goals and win rates of top 5 teams",
theme = theme(
plot.title = element_text(size = 16, face = "bold"),       # Bold title with increased font size
plot.subtitle = element_text(size = 14, face = "bold")    # Bold subtitle with slightly smaller font
)
)
print(composite_visualization)
ggsave("new_composite_visualizations.pdf", plot = composite_visualization ,width = 32, height = 20, dpi = 300)
composite_visualization <- (treemap+line_chart) /(sankey_plot+heat_map)+
plot_annotation(
title = "Analysis of key trends in top 5 continental tournaments",
subtitle = "A deep dive into distribution of matches, match outcomes, influence of penalty & own_goals and win rates of top 5 teams",
theme = theme(
plot.title = element_text(size = 16, face = "bold", hjust = 0.5),       # Bold title with increased font size
plot.subtitle = element_text(size = 14, face = "bold", hjust = 0.5)    # Bold subtitle with slightly smaller font
)
)
ggsave("new_composite_visualizations.pdf", plot = composite_visualization ,width = 32, height = 20, dpi = 300)
composite_visualization <- (treemap+line_chart) /(sankey_plot+heat_map)+
plot_annotation(
title = "Analysis of key trends in top 5 continental football tournaments",
subtitle = "A deep dive into distribution of matches, match outcomes, influence of penalty & own_goals and win rates of top 5 teams",
theme = theme(
plot.title = element_text(size = 18, face = "bold", hjust = 0.5),       # Bold title with increased font size
plot.subtitle = element_text(size = 16, face = "bold", hjust = 0.5)    # Bold subtitle with slightly smaller font
)
)
ggsave("new_composite_visualizations.pdf", plot = composite_visualization ,width = 32, height = 20, dpi = 300)
treemap_data <- major_tournaments %>%
group_by(tournament) %>%
summarise(total_matches = n()) %>% View()
treemap_data <- major_tournaments %>%
group_by(tournament) %>%
summarise(total_matches = n()) %>% View()
library(ggplot2)
library(dplyr)
library(ggalluvial)
library(tidyr)
library(tidyverse)
print(sankey_plot)
print(heat_map)
print(line_chart)
print(heat_map)
print(treemap)
